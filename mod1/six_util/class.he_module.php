<?php
require_once(t3lib_extMgm::extPath('he_tools') . 'lib/class.tx_he_tools_db.php');
require_once(t3lib_extMgm::extPath('he_personen') . 'lib/class.tx_he_personen_util.php');
//require_once(t3lib_extMgm::extPath('six2t3').'lib/class.siximport.php');

class he_module {
protected $post;
protected $get;
public $feUserLinks = array();

public $pordNummernAlt = array(
49322=>13602,
53883=>13603,
55161=>14022,
49335=>13605,
50788=>16934,
49942=>13608,
50789=>16935,
49330=>13622,
49962=>13625,
49260=>16937,
49958=>14036,
49966=>14037,
49972=>14038,
49985=>14039,
55182=>14040,
60082=>16945,
50014=>14041,
49343=>14042,
49990=>14043,
53875=>14045,
55182=>14046,
50001=>14047,
50005=>14048,
53875=>14049,
55182=>14050,
49967=>14051,
49980=>14052,
55160=>14053,
50016=>14054,
53887=>14059,
49339=>14060,
49971=>14061,
22285=>16031,
22681=>16032,
22282=>16033,
22682=>16034,
22683=>16035,
22684=>16036,
22685=>16037,
22686=>16038,
22687=>16039,
22284=>16040,
23417=>16091,
48667=>16092,
23416=>16093,
23393=>16094,
23395=>16095,
23396=>16096,
23397=>16097,
23398=>16098,
23400=>16099,
23401=>16100,
23408=>16101,
23402=>16102,
23403=>16103,
23550=>16104,
23555=>16105,
23549=>16106,
23557=>16107,
23551=>16108,
23558=>16109,
23552=>16110,
23410=>16111,
23411=>16112,
23412=>16113,
23413=>16114,
23407=>16115,
48893=>16881,
48952=>16882,
50753=>16884,
49041=>16900,
49102=>16901,
48929=>16902,
49029=>16903,
49045=>16904,
49106=>16905,
49110=>16906,
48956=>16907,
49012=>16908,
49017=>16912,
50737=>16915,
49025=>16917,
49021=>16919,
49075=>16920,
50737=>16923,
50749=>16925,
60094=>20438,
48941=>16926,
49006=>16927,
49033=>16928,
49037=>16929,
49079=>16930,
49091=>16932,
49225=>16936,
49283=>16938,
50793=>16939,
50771=>16940,
49304=>16941,
50797=>16942,
50784=>16944,
60090=>16946,
48935=>16949,
48946=>16954,
49085=>16954,
50758=>16954,
66954=>17074,
62836=>17075,
62824=>17076,
62809=>17077,
62814=>17078,
62828=>17079,
62808=>17085,
66995=>17087,
66990=>17088,
67018=>17089,
62832=>17092,
62836=>17204,
62824=>17205,
62809=>17206,
62814=>17207,
62828=>17208,
62808=>17213,
66995=>17215,
66990=>17216,
67018=>17217,
62832=>17220,
62836=>17289,
62824=>17290,
62809=>17291,
62814=>17292,
62828=>17293,
62808=>17298,
66995=>17300,
66990=>17301,
67018=>17302,
62832=>17305,
50647=>18134,
53891=>18134,
25870=>18181,
25871=>18182,
25885=>18183,
25886=>18184,
25887=>18185,
25891=>18186,
25888=>18187,
25889=>18188,
25890=>18189,
25892=>18190,
62810=>18299,
36451=>18631,
36255=>18632,
36235=>18633,
36237=>18634,
36211=>18635,
36234=>18636,
36236=>18637,
47245=>18638,
53341=>18639,
37154=>18668,
37153=>18669,
37158=>18670,
37162=>18671,
37168=>18672,
37172=>18673,
37173=>18674,
37174=>18675,
67001=>18835,
67005=>18839,
53561=>18840,
67014=>18843,
67001=>18847,
67005=>18849,
53561=>18851,
67014=>18862,
67001=>18866,
67005=>18868,
53561=>18870,
67014=>18872,
43021=>19080,
43583=>19081,
43589=>19082,
43594=>19083,
43599=>19084,
43606=>19085,
43615=>19086,
43621=>19087,
43626=>19088,
22286=>19091,
22285=>19097,
22681=>19098,
22282=>19099,
22682=>19100,
22683=>19101,
22684=>19102,
22286=>19103,
22685=>19104,
22686=>19105,
22687=>19106,
22284=>19107,
23417=>19108,
48667=>19109,
23416=>19110,
23393=>19111,
23394=>19112,
23395=>19113,
23906=>19114,
23907=>19115,
23908=>19116,
23400=>19117,
23401=>19118,
23408=>19119,
23402=>19120,
24655=>19121,
24667=>19121,
23916=>19122,
24653=>19123,
24662=>19124,
24665=>19125,
23410=>19126,
24663=>19127,
22679=>19128,
23919=>19129,
23407=>19130,
22285=>19132,
22681=>19133,
22282=>19134,
22682=>19135,
22683=>19136,
22684=>19137,
22286=>19138,
22685=>19139,
22686=>19140,
22687=>19141,
22284=>19142,
28042=>19155,
28046=>19156,
28041=>19157,
28044=>19158,
30409=>19159,
28047=>19160,
28048=>19161,
30391=>19162,
29511=>19163,
28042=>19175,
28046=>19176,
28041=>19177,
28044=>19178,
23852=>19179,
24688=>19180,
28060=>19181,
28383=>19182,
25893=>19191,
28681=>19201,
28684=>19202,
28689=>19203,
22154=>19204,
28691=>19205,
29150=>19206,
29156=>19207,
29160=>19208,
29161=>19209,
22160=>19210,
29167=>19211,
16235=>19226,
16407=>19227,
16536=>19228,
16529=>19229,
16371=>19230,
38602=>19231,
16526=>19232,
16537=>19233,
16538=>19234,
16533=>19235,
16571=>19236,
16235=>19240,
16407=>19241,
16536=>19242,
16529=>19243,
16371=>19244,
38602=>19245,
16526=>19246,
16537=>19247,
16538=>19248,
16533=>19249,
16571=>19250,
16235=>19255,
16407=>19256,
16536=>19257,
16529=>19258,
16371=>19259,
38602=>19260,
16526=>19261,
16537=>19262,
16538=>19263,
16533=>19264,
16571=>19265,
28230=>19459,
28229=>19460,
28226=>19461,
28223=>19462,
26985=>19463,
28243=>19464,
28241=>19465,
28238=>19466,
28235=>19467,
36916=>19480,
27037=>19481,
39018=>19482,
27042=>19483,
27596=>19484,
27079=>19485,
27585=>19486,
39059=>19487,
27087=>19488,
27591=>19501,
35837=>19502,
28889=>19503,
34295=>19504,
28890=>19505,
28905=>19506,
28891=>19507,
27046=>19508,
36594=>19509,
48864=>19510,
48870=>19511,
48871=>19512,
48872=>19513,
48874=>19514,
48878=>19515,
48881=>19516,
48887=>19517,
48888=>19518,
62841=>19533,
62841=>19534,
62841=>19538,
50020=>19734,
50024=>19735,
50028=>19736,
50036=>19737,
50040=>19738,
50044=>19739,
50048=>19740,
50058=>19741,
50070=>19742,
50052=>19743,
50062=>19744,
50082=>19745,
50149=>19746,
50086=>19747,
50066=>19749,
50142=>19750,
50074=>19752,
50138=>19754,
50157=>19755,
50157=>19756,
50078=>19758,
50153=>19759,
50090=>19760,
50134=>19762,
50669=>19771,
50635=>19772,
50028=>19773,
50651=>19774,
50639=>19775,
50655=>19776,
50659=>19777,
50717=>19778,
50677=>19779,
50663=>19780,
50713=>19781,
50692=>19782,
50721=>19783,
50697=>19784,
50673=>19786,
50724=>19787,
50723=>19788,
50681=>19789,
50705=>19790,
50709=>19791,
50723=>19792,
50665=>19793,
50688=>19794,
50728=>19795,
50701=>19796,
50054=>19801,
50032=>19804,
50171=>19804,
28681=>19817,
28684=>19818,
28689=>19819,
22154=>19820,
28691=>19821,
29150=>19822,
29156=>19823,
29160=>19824,
29161=>19825,
22160=>19826,
29167=>19827,
16235=>19832,
16407=>19833,
16536=>19834,
16529=>19835,
16371=>19836,
38602=>19837,
16526=>19838,
16537=>19839,
16538=>19840,
16533=>19841,
16571=>19842,
28681=>19846,
25871=>19847,
25885=>19848,
25886=>19849,
25887=>19850,
25891=>19851,
25888=>19852,
25889=>19853,
25890=>19854,
25892=>19855,
25893=>19856,
24426=>19878,
24431=>19879,
24447=>19880,
25400=>19881,
24476=>19882,
24477=>19883,
24478=>19884,
24694=>19885,
52525=>19886,
37008=>20106,
37012=>20107,
37024=>20108,
37004=>20109,
36895=>20110,
40703=>20112,
37026=>20116,
54963=>20117,
37025=>20118,
37022=>20122,
37021=>20123,
37020=>20124,
37023=>20125,
16562=>20232,
47459=>20233,
16561=>20234,
16284=>20235,
16539=>20236,
16572=>20237,
16540=>20238,
16534=>20239,
16569=>20240,
16405=>20241,
16573=>20242,
23039=>20243,
16546=>20244,
16568=>20245,
16570=>20246,
16567=>20247,
16403=>20248,
16560=>20249,
16545=>20250,
16542=>20251,
16566=>20253,
16544=>20254,
16554=>20255,
16541=>20256,
16543=>20257,
16565=>20258,
50745=>20270,
23394=>20275,
50179=>20278,
50183=>20280,
50202=>20298,
50206=>20299,
50225=>20302,
50246=>20306,
50253=>20307,
50283=>20310,
50287=>20311,
50307=>20314,
50472=>20315,
50498=>20319,
50502=>20320,
50528=>20324,
50532=>20325,
50548=>20329,
50564=>20352,
50576=>20355,
50580=>20356,
50592=>20359,
50596=>20360,
66545=>20373,
50619=>20381,
50536=>20383,
50540=>20384,
50544=>20385,
50552=>20386,
50556=>20387,
50572=>20389,
50584=>20390,
50198=>20391,
50490=>20392,
50491=>20393,
50486=>20394,
50588=>20395,
50604=>20396,
50605=>20397,
50610=>20398,
50524=>20400,
50624=>20401,
50626=>20402,
50213=>20403,
50217=>20404,
50232=>20407,
50260=>20408,
50279=>20409,
50291=>20410,
50297=>20411,
50476=>20412,
50480=>20413,
66950=>20465,
66958=>20466,
66950=>20475,
66958=>20476,
66950=>20495,
66958=>20498,
66954=>20520,
66954=>20521,
25894=>20638,
23407=>20714,
23925=>20715,
23924=>20716,
23411=>20717,
23410=>20718,
23922=>20719,
23919=>20720,
23918=>20721,
23916=>20722,
23921=>20723,
23558=>20724,
23917=>20725,
23915=>20726,
23402=>20727,
23408=>20728,
23401=>20729,
23400=>20730,
23897=>20731,
23896=>20732,
23396=>20733,
23395=>20734,
23394=>20735,
23393=>20736,
23416=>20737,
48667=>20738,
23417=>20739,
29839=>20756,
28162=>20758,
28151=>20759,
28152=>20760,
28153=>20761,
28154=>20762,
28155=>20763,
28156=>20764,
28157=>20765,
28158=>20766,
30404=>20767,
29513=>20768,
28160=>20769,
28161=>20770,
28163=>20771,
58323=>20772,
28164=>20789,
58459=>20790,
29877=>20791,
28151=>20792,
28389=>20793,
28390=>20794,
28393=>20796,
28394=>20797,
28395=>20798,
28399=>20799,
28067=>20800,
28397=>20801,
28398=>20802,
28396=>20803,
58454=>20804,
28391=>20806,
25919=>20828,
52696=>20829,
25914=>20830,
36238=>20831,
25897=>20832,
25901=>20833,
25900=>20834,
25899=>20835,
25898=>20837,
25872=>20838,
25909=>20839,
25920=>20840,
25921=>20841,
25916=>20842,
25917=>20843,
25918=>20844,
29228=>20884,
29225=>20886,
29187=>20888,
29190=>20889,
29197=>20890,
29200=>20891,
29203=>20892,
29204=>20893,
29208=>20894,
29209=>20895,
29216=>20896,
29241=>20897,
29218=>20898,
29219=>20899,
29245=>20900,
29224=>20901,
60473=>20902,
29236=>20903,
22141=>20904,
29249=>20905,
29254=>20906,
60473=>20907,
22181=>20908,
22141=>20909,
22182=>20910,
29271=>20911,
29276=>20912,
22295=>20913,
22141=>20914,
38525=>20915,
22296=>20916,
29294=>20917,
29298=>20918,
38525=>20919,
60473=>20920,
29302=>20921,
16562=>20922,
47459=>20923,
16561=>20924,
16284=>20925,
16539=>20926,
16572=>20927,
16540=>20928,
16534=>20929,
16569=>20930,
16405=>20931,
16573=>20932,
23039=>20933,
16546=>20934,
16568=>20935,
16570=>20936,
16567=>20937,
16403=>20938,
16560=>20939,
16562=>20940,
47459=>20941,
16561=>20942,
16284=>20943,
16539=>20944,
16572=>20945,
16540=>20946,
16534=>20947,
16569=>20948,
16405=>20949,
16573=>20950,
23039=>20951,
16546=>20952,
16568=>20953,
16570=>20954,
16567=>20955,
16403=>20956,
16560=>20957,
16547=>20968,
16548=>20969,
16564=>20970,
16555=>20971,
16563=>20972,
16548=>20973,
16559=>20974,
16550=>20975,
16557=>20976,
16558=>20977,
52315=>20996,
24730=>20997,
24729=>20998,
28893=>20999,
35097=>21000,
28894=>21001,
28895=>21002,
28896=>21003,
28897=>21004,
36412=>21005,
36217=>21006,
24721=>21007,
28900=>21008,
28901=>21009,
28902=>21010,
35582=>21011,
28903=>21012,
28904=>21013,
28274=>21039,
28292=>21041,
28295=>21041,
28311=>21041,
28244=>21042,
28249=>21043,
28252=>21044,
28255=>21045,
28257=>21046,
28260=>21047,
28264=>21048,
28278=>21049,
28267=>21050,
28301=>21051,
28271=>21052,
28284=>21053,
28287=>21054,
28280=>21055,
28288=>21056,
28298=>21057,
28304=>21058,
28306=>21059,
28308=>21060,
28310=>21061,
28292=>21062,
28295=>21062,
32188=>21084,
52522=>21085,
32176=>21086,
24636=>21087,
24638=>21088,
24648=>21089,
24681=>21090,
24684=>21091,
24479=>21092,
32194=>21093,
24705=>21094,
28340=>21095,
24706=>21096,
24718=>21097,
24708=>21098,
24709=>21099,
24722=>21100,
24723=>21101,
24725=>21102,
24727=>21103,
32185=>21104,
52313=>21123,
36230=>21124,
27584=>21125,
27580=>21126,
27125=>21127,
27090=>21128,
27122=>21129,
36247=>21130,
36225=>21131,
36940=>21132,
36226=>21133,
31108=>21134,
48631=>21135,
28898=>21136,
28370=>21137,
31099=>21138,
48637=>21139,
48640=>21140,
16562=>21141,
23393=>21142,
23394=>21143,
23395=>21144,
23906=>21145,
23907=>21146,
23908=>21147,
23400=>21148,
23401=>21149,
23039=>21150,
24655=>21151,
36352=>21152,
24652=>21153,
23397=>21154,
24665=>21155,
23410=>21156,
24663=>21157,
22679=>21158,
24668=>21159,
37759=>21160,
37751=>21161,
37077=>21162,
37730=>21163,
37759=>21164,
37751=>21165,
37077=>21166,
37730=>21167,
37759=>21168,
37751=>21169,
37077=>21170,
37730=>21171,
37759=>21172,
37751=>21173,
37077=>21174,
37730=>21175,
29228=>21176,
29187=>21177,
29190=>21178,
29197=>21179,
29200=>21180,
29203=>21181,
29204=>21182,
29208=>21183,
29209=>21184,
29216=>21185,
29241=>21186,
60473=>21187,
29245=>21188,
29294=>21189,
29298=>21190,
29302=>21191,
38525=>21192,
29224=>21193,
16562=>21194,
16284=>21195,
16539=>21196,
16572=>21197,
16540=>21198,
16534=>21199,
16569=>21200,
16573=>21201,
23039=>21202,
16546=>21203,
16568=>21204,
16570=>21205,
16567=>21206,
16547=>21207,
16548=>21208,
16564=>21209,
16555=>21210,
16563=>21211,
24652=>21212,
25919=>21213,
25914=>21214,
36238=>21215,
25897=>21216,
25901=>21217,
25900=>21218,
25899=>21219,
25894=>21220,
25898=>21221,
25909=>21222,
25916=>21223,
25918=>21224,
25925=>21225,
25926=>21226,
58331=>21227,
22285=>21229,
22681=>21230,
22282=>21231,
22682=>21232,
22683=>21233,
22684=>21234,
22286=>21235,
22685=>21236,
22686=>21237,
22687=>21238,
22284=>21239,
50354=>21240,
50353=>21241,
50351=>21242,
50113=>21243,
50117=>21244,
50120=>21245,
50160=>21246,
50221=>21247,
50167=>21248,
50196=>21249,
50209=>21250,
50228=>21251,
50241=>21252,
50249=>21253,
50256=>21254,
50328=>21255,
50333=>21256,
50337=>21257,
50343=>21258,
50346=>21259,
50347=>21260,
24661=>21283,
24664=>21284,
23921=>21287,
24661=>21288,
23918=>21289,
36352=>21291,
24652=>21292,
24668=>21295,
36352=>21296,
24654=>21297,
24666=>21299,
23557=>21300,
40707=>21498,
36451=>21795,
36255=>21796,
36235=>21797,
36237=>21798,
36211=>21799,
36234=>21800,
36236=>21801,
47245=>21802,
);

public $pordNummern = array(
19155 => array("BTB101","28042"),
19156 => array("BTB102","28046"),
19157 => array("BTB103","28041"),
19158 => array("BTB201","28044"),
19160 => array("BTB202","28047"),
19163 => array("BTB203","29511"),
19161 => array("BTB204","28048"),
19159 => array("BTB205","30409"),
19162 => array("BTB206","30391"),
20759 => array("BTB301","28151"),
20760 => array("BTB302","28152"),
20761 => array("BTB303","28153"),
20762 => array("BTB304","28154"),
20763 => array("BTB401","28155"),
20764 => array("BTB402","28156"),
20765 => array("BTB403","28157"),
20766 => array("BTB404","28158"),
20772 => array("BTB405","58323"),
20767 => array("BTB501","30404"),
20768 => array("BTB601","29513"),
20769 => array("BTB602","28160"),
20770 => array("BTB603","28161"),
20758 => array("BTB701","28162"),
20771 => array("BTB702","28163"),
21227 => array("BTB703","58331"),
20756 => array("BTB704","29839"),
19175 => array("CIB101","28042"),
19176 => array("CIB102","28046"),
19177 => array("CIB103","28041"),
19178 => array("CIB201","28044"),
19180 => array("CIB202","24688"),
19179 => array("CIB203","23852"),
19181 => array("CIB204","28060"),
19182 => array("CIB205","28383"),
20792 => array("CIB301","28151"),
20793 => array("CIB302","28389"),
20794 => array("CIB303","28390"),
20806 => array("CIB304","28391"),
20796 => array("CIB401","28393"),
20797 => array("CIB402","28394"),
20798 => array("CIB403","28395"),
20799 => array("CIB404","28399"),
20801 => array("CIB405","28397"),
20800 => array("CIB501","28067"),
20802 => array("CIB601","28398"),
20803 => array("CIB602","28396"),
20804 => array("CIB603","58454"),
20791 => array("CIB701","29877"),
20790 => array("CIB702","58459"),
20789 => array("CIB703","28164"),
19080 => array("EGM101","43021"),
19081 => array("EGM102","43583"),
19082 => array("EGM103","43589"),
19083 => array("EGM104","43594"),
19084 => array("EGM105","43599"),
19085 => array("EGM201","43606"),
19086 => array("EGM202","43615"),
19087 => array("EGM203","43621"),
19088 => array("EGM301","43626"),
19201 => array("FZB101","28681"),
19202 => array("FZB102","28684"),
19203 => array("FZB103","28689"),
19204 => array("FZB104","22154"),
19205 => array("FZB105","28691"),
19206 => array("FZB201","29150"),
19207 => array("FZB202","29156"),
19208 => array("FZB203","29160"),
19209 => array("FZB204","29161"),
19210 => array("FZB205","22160"),
19211 => array("FZB206","29167"),
20888 => array("FZB301","29187"),
20889 => array("FZB302","29190"),
20890 => array("FZB303","29197"),
20891 => array("FZB304","29200"),
20892 => array("FZB305","29203"),
20893 => array("FZB306","29204"),
20894 => array("FZB401","29208"),
20895 => array("FZB402","29209"),
20902 => array("FZB411","60473"),
20903 => array("FZB412","29236"),
20897 => array("FZB413","29241"),
20896 => array("FZB501","29216"),
20898 => array("FZB502","29218"),
20899 => array("FZB601","29219"),
20900 => array("FZB611","29245"),
20904 => array("FZB612","22141"),
20905 => array("FZB613","29249"),
20906 => array("FZB614","29254"),
20901 => array("FZB701","29224"),
20886 => array("FZB702","29225"),
20884 => array("FZB704","29228"),
20907 => array("FZB411","60473"),
20908 => array("FZB421","22181"),
20909 => array("FZB612","22141"),
20910 => array("FZB622","22182"),
20911 => array("FZB623","29271"),
20912 => array("FZB431","29276"),
20913 => array("FZB432","22295"),
20914 => array("FZB612","22141"),
20915 => array("FZB631","38525"),
20916 => array("FZB632","22296"),
20920 => array("FZB411","60473"),
20917 => array("FZB441","29294"),
20918 => array("FZB442","29298"),
20919 => array("FZB631","38525"),
20921 => array("FZB641","29302"),
21154 => array("ATB305","23397"),
21145 => array("ETB304","23906"),
21146 => array("ETB305","23907"),
21147 => array("ETB306","23908"),
21151 => array("ETB404","24655"),
21152 => array("ETB415","36352"),
21153 => array("ETB416","24652"),
21157 => array("ETB602","24663"),
21158 => array("ETB603","22679"),
21155 => array("ETB614","24665"),
21159 => array("ETB616","24668"),
21160 => array("G401","37759"),
21161 => array("G701","37751"),
21162 => array("G702","37077"),
21163 => array("G703","37730"),
21229 => array("ME101","22285"),
21230 => array("ME102","22681"),
21231 => array("ME103","22282"),
21232 => array("ME104","22682"),
21233 => array("ME105","22683"),
21234 => array("ME201","22684"),
21235 => array("ME202","22286"),
21236 => array("ME203","22685"),
21237 => array("ME204","22686"),
21238 => array("ME205","22687"),
21239 => array("ME206","22284"),
21142 => array("ME301","23393"),
21143 => array("ME302","23394"),
21144 => array("ME303","23395"),
21148 => array("ME401","23400"),
21149 => array("ME402","23401"),
21150 => array("ME501","23039"),
21156 => array("ME601","23410"),
21141 => array("ME703","16562"),
21193 => array("FMP701","29224"),
19817 => array("FZB101","28681"),
19818 => array("FZB102","28684"),
19819 => array("FZB103","28689"),
19820 => array("FZB104","22154"),
19821 => array("FZB105","28691"),
19822 => array("FZB201","29150"),
19823 => array("FZB202","29156"),
19824 => array("FZB203","29160"),
19825 => array("FZB204","29161"),
19826 => array("FZB205","22160"),
19827 => array("FZB206","29167"),
21177 => array("FZB301","29187"),
21178 => array("FZB302","29190"),
21179 => array("FZB303","29197"),
21180 => array("FZB304","29200"),
21181 => array("FZB305","29203"),
21182 => array("FZB306","29204"),
21183 => array("FZB401","29208"),
21184 => array("FZB402","29209"),
21187 => array("FZB411","60473"),
21186 => array("FZB413","29241"),
21189 => array("FZB441","29294"),
21190 => array("FZB442","29298"),
21185 => array("FZB501","29216"),
21188 => array("FZB611","29245"),
21192 => array("FZB631","38525"),
21191 => array("FZB641","29302"),
21176 => array("FZB704","29228"),
21172 => array("G401","37759"),
21173 => array("G701","37751"),
21174 => array("G702","37077"),
21175 => array("G703","37730"),
21212 => array("ETB416","24652"),
21164 => array("G401","37759"),
21165 => array("G701","37751"),
21166 => array("G702","37077"),
21167 => array("G703","37730"),
19832 => array("IT101","16235"),
19833 => array("IT102","16407"),
19834 => array("IT103","16536"),
19835 => array("IT104","16529"),
19836 => array("IT105","16371"),
19837 => array("IT201","38602"),
19838 => array("IT202","16526"),
19839 => array("IT203","16537"),
19840 => array("IT204","16538"),
19841 => array("IT205","16533"),
19842 => array("IT206","16571"),
21195 => array("IT301","16284"),
21196 => array("IT302","16539"),
21197 => array("IT303","16572"),
21198 => array("IT304","16540"),
21199 => array("IT305","16534"),
21200 => array("IT306","16569"),
21201 => array("IT402","16573"),
21203 => array("IT403","16546"),
21204 => array("IT404","16568"),
21205 => array("IT405","16570"),
21206 => array("IT406","16567"),
21202 => array("IT501","23039"),
21194 => array("IT703","16562"),
21208 => array("TIB602","16548"),
21207 => array("TIB603","16547"),
21209 => array("TIB604","16564"),
21210 => array("TIB605","16555"),
21211 => array("TIB606","16563"),
21168 => array("G401","37759"),
21169 => array("G701","37751"),
21170 => array("G702","37077"),
21171 => array("G703","37730"),
21223 => array("MAP601","25916"),
21224 => array("MAP701","25918"),
19846 => array("MBB101","28681"),
19847 => array("MBB102","25871"),
19848 => array("MBB103","25885"),
19849 => array("MBB104","25886"),
19850 => array("MBB105","25887"),
19851 => array("MBB201","25891"),
19852 => array("MBB202","25888"),
19853 => array("MBB203","25889"),
19854 => array("MBB204","25890"),
19855 => array("MBB205","25892"),
19856 => array("MBB206","25893"),
21216 => array("MBB301","25897"),
21217 => array("MBB302","25901"),
21218 => array("MBB303","25900"),
21219 => array("MBB304","25899"),
21220 => array("MBB305","25894"),
21221 => array("MBB401","25898"),
21225 => array("MBB405","25925"),
21226 => array("MBB406","25926"),
21222 => array("MBB501","25909"),
21214 => array("MBB601","25914"),
21215 => array("MBB602","36238"),
21213 => array("MBB703","25919"),
18669 => array("IMM101","37153"),
18668 => array("IMM102","37154"),
18670 => array("IMM103","37158"),
18671 => array("IMM201","37162"),
18672 => array("IMM202","37168"),
18673 => array("IMM203","37172"),
18674 => array("IMM301","37173"),
18675 => array("IMM302","37174"),
19502 => array("TBB102","35837"),
19508 => array("TBB204","27046"),
20999 => array("TBB301","28893"),
21001 => array("TBB303","28894"),
21004 => array("TBB402","28897"),
21009 => array("TBB601","28901"),
20998 => array("TBB701","24729"),
20997 => array("TBB702","24730"),
20996 => array("TBB703","52315"),
19510 => array("IWB101","48864"),
19511 => array("IWB102","48870"),
19512 => array("IWB103","48871"),
19513 => array("IWB104","48872"),
19514 => array("IWB201","48874"),
19515 => array("IWB202","48878"),
19516 => array("IWB203","48881"),
19517 => array("IWB204","48887"),
19518 => array("IWB205","48888"),
21243 => array("IWB301","50113"),
21244 => array("IWB302","50117"),
21245 => array("IWB303","50120"),
21246 => array("IWB304","50160"),
21248 => array("IWB305","50167"),
21249 => array("IWB306","50196"),
21250 => array("IWB401","50209"),
21247 => array("IWB402","50221"),
21251 => array("IWB403","50228"),
21252 => array("IWB404","50241"),
21253 => array("IWB405","50249"),
21254 => array("IWB406","50256"),
21255 => array("IWB501","50328"),
21256 => array("IWB601","50333"),
21257 => array("IWB602","50337"),
21258 => array("IWB603","50343"),
21259 => array("IWB604","50346"),
21260 => array("IWB605","50347"),
21242 => array("IWB701","50351"),
21241 => array("IWB702","50353"),
21240 => array("IWB703","50354"),
20942 => array("IT701","16561"),
20941 => array("IT702","47459"),
20940 => array("IT703","16562"),
19226 => array("IT101","16235"),
19227 => array("IT102","16407"),
19228 => array("IT103","16536"),
19229 => array("IT104","16529"),
19230 => array("IT105","16371"),
19231 => array("IT201","38602"),
19232 => array("IT202","16526"),
19233 => array("IT203","16537"),
19234 => array("IT204","16538"),
19235 => array("IT205","16533"),
19236 => array("IT206","16571"),
20943 => array("IT301","16284"),
20944 => array("IT302","16539"),
20945 => array("IT303","16572"),
20946 => array("IT304","16540"),
20947 => array("IT305","16534"),
20948 => array("IT306","16569"),
20949 => array("IT401","16405"),
20950 => array("IT402","16573"),
20952 => array("IT403","16546"),
20953 => array("IT404","16568"),
20954 => array("IT405","16570"),
20955 => array("IT406","16567"),
20951 => array("IT501","23039"),
20956 => array("IT502","16403"),
20957 => array("IT601","16560"),
20973 => array("KTB602","16548"),
20974 => array("KTB603","16559"),
20975 => array("KTB604","16550"),
20976 => array("KTB605","16557"),
20977 => array("KTB606","16558"),
20840 => array("EKB403","25920"),
20841 => array("EKB404","25921"),
18181 => array("MBB101","25870"),
18182 => array("MBB102","25871"),
18183 => array("MBB103","25885"),
18184 => array("MBB104","25886"),
18185 => array("MBB105","25887"),
18186 => array("MBB201","25891"),
18187 => array("MBB202","25888"),
18188 => array("MBB203","25889"),
18189 => array("MBB204","25890"),
18190 => array("MBB205","25892"),
19191 => array("MBB206","25893"),
20832 => array("MBB301","25897"),
20833 => array("MBB302","25901"),
20834 => array("MBB303","25900"),
20835 => array("MBB304","25899"),
20638 => array("MBB305","25894"),
20837 => array("MBB401","25898"),
20838 => array("MBB402","25872"),
20839 => array("MBB501","25909"),
20830 => array("MBB601","25914"),
20831 => array("MBB602","36238"),
20842 => array("MBB603","25916"),
20843 => array("MBB604","25917"),
20844 => array("MBB701","25918"),
20829 => array("MBB702","52696"),
20828 => array("MBB703","25919"),
16036 => array("ME201","22684"),
19091 => array("ME202","22286"),
16037 => array("ME203","22685"),
16038 => array("ME204","22686"),
16039 => array("ME205","22687"),
16040 => array("ME206","22284"),
16101 => array("ME501","23408"),
16115 => array("ME502","23407"),
16093 => array("ME701","23416"),
16092 => array("ME702","48667"),
16091 => array("ME703","23417"),
16031 => array("ME101","22285"),
16032 => array("ME102","22681"),
16033 => array("ME103","22282"),
16034 => array("ME104","22682"),
16035 => array("ME105","22683"),
16096 => array("ATB304","23396"),
16097 => array("ATB305","23397"),
16098 => array("ATB306","23398"),
16103 => array("ATB404","23403"),
16104 => array("ATB405","23550"),
16105 => array("ATB425","23555"),
16112 => array("ATB602","23411"),
16113 => array("ATB603","23412"),
16114 => array("ATB604","23413"),
16107 => array("ATB625","23557"),
16109 => array("ATB626","23558"),
16094 => array("ME301","23393"),
20275 => array("ME302","23394"),
16095 => array("ME303","23395"),
16099 => array("ME401","23400"),
16100 => array("ME402","23401"),
16102 => array("ME403","23402"),
16111 => array("ME601","23410"),
16106 => array("ATB415","23549"),
16108 => array("ATB615","23551"),
16110 => array("ATB616","23552"),
19114 => array("ETB304","23906"),
19115 => array("ETB305","23907"),
19116 => array("ETB306","23908"),
19121 => array("ETB404","24655"),
21291 => array("ETB415","36352"),
21292 => array("ETB416","24652"),
19127 => array("ETB602","24663"),
19128 => array("ETB603","22679"),
19124 => array("ETB611","24662"),
19125 => array("ETB614","24665"),
21295 => array("ETB616","24668"),
19102 => array("ME201","22684"),
19103 => array("ME202","22286"),
19104 => array("ME203","22685"),
19105 => array("ME204","22686"),
19106 => array("ME205","22687"),
19107 => array("ME206","22284"),
19111 => array("ME301","23393"),
19112 => array("ME302","23394"),
19113 => array("ME303","23395"),
19117 => array("ME401","23400"),
19118 => array("ME402","23401"),
19120 => array("ME403","23402"),
19119 => array("ME501","23408"),
19130 => array("ME502","23407"),
19126 => array("ME601","23410"),
19110 => array("ME701","23416"),
19109 => array("ME702","48667"),
19108 => array("ME703","23417"),
21296 => array("ETB415","36352"),
21297 => array("ETB426","24654"),
21299 => array("ETB624","24666"),
21300 => array("ETB625","23557"),
19097 => array("ME101","22285"),
19098 => array("ME102","22681"),
19099 => array("ME103","22282"),
19100 => array("ME104","22682"),
19101 => array("ME105","22683"),
19123 => array("ETB436","24653"),
21283 => array("ETB634","24661"),
21284 => array("ETB635","24664"),
19122 => array("ETB435","23916"),
21287 => array("ETB446","23921"),
21288 => array("ETB634","24661"),
21289 => array("ETB645","23918"),
19129 => array("ETB646","23919"),
19137 => array("ME201","22684"),
19138 => array("ME202","22286"),
19139 => array("ME203","22685"),
19140 => array("ME204","22686"),
19141 => array("ME205","22687"),
19142 => array("ME206","22284"),
20728 => array("ME501","23408"),
20714 => array("ME502","23407"),
20737 => array("ME701","23416"),
20738 => array("ME702","48667"),
20739 => array("ME703","23417"),
20719 => array("FMB404","23922"),
20726 => array("FMB415","23915"),
20717 => array("FMB602","23411"),
20716 => array("FMB603","23924"),
20715 => array("FMB604","23925"),
20725 => array("FMB615","23917"),
19132 => array("ME101","22285"),
19133 => array("ME102","22681"),
19134 => array("ME103","22282"),
19135 => array("ME104","22682"),
19136 => array("ME105","22683"),
20730 => array("ME401","23400"),
20729 => array("ME402","23401"),
20727 => array("ME403","23402"),
20718 => array("ME601","23410"),
20720 => array("FMB622","23919"),
20733 => array("FMB304","23396"),
20732 => array("FMB305","23896"),
20723 => array("FMB405","23921"),
20722 => array("FMB421","23916"),
20721 => array("FMB621","23918"),
20736 => array("ME301","23393"),
20735 => array("ME302","23394"),
20734 => array("ME303","23395"),
20249 => array("IT601","16560"),
20234 => array("IT701","16561"),
20233 => array("IT702","47459"),
20232 => array("IT703","16562"),
20250 => array("SWB611","16545"),
20253 => array("SWB612","16566"),
20258 => array("SWB613","16565"),
20251 => array("SWB614","16542"),
20255 => array("SWB615","16554"),
19240 => array("IT101","16235"),
19241 => array("IT102","16407"),
19242 => array("IT103","16536"),
19243 => array("IT104","16529"),
19244 => array("IT105","16371"),
19245 => array("IT201","38602"),
19246 => array("IT202","16526"),
19247 => array("IT203","16537"),
19248 => array("IT204","16538"),
19249 => array("IT205","16533"),
19250 => array("IT206","16571"),
20235 => array("IT301","16284"),
20236 => array("IT302","16539"),
20237 => array("IT303","16572"),
20238 => array("IT304","16540"),
20239 => array("IT305","16534"),
20240 => array("IT306","16569"),
20241 => array("IT401","16405"),
20242 => array("IT402","16573"),
20244 => array("IT403","16546"),
20245 => array("IT404","16568"),
20246 => array("IT405","16570"),
20247 => array("IT406","16567"),
20243 => array("IT501","23039"),
20248 => array("IT502","16403"),
20256 => array("SWB621","16541"),
20254 => array("SWB622","16544"),
20257 => array("SWB623","16543"),
20924 => array("IT701","16561"),
20923 => array("IT702","47459"),
20922 => array("IT703","16562"),
19255 => array("IT101","16235"),
19256 => array("IT102","16407"),
19257 => array("IT103","16536"),
19258 => array("IT104","16529"),
19259 => array("IT105","16371"),
19260 => array("IT201","38602"),
19261 => array("IT202","16526"),
19262 => array("IT203","16537"),
19263 => array("IT204","16538"),
19264 => array("IT205","16533"),
19265 => array("IT206","16571"),
20925 => array("IT301","16284"),
20926 => array("IT302","16539"),
20927 => array("IT303","16572"),
20928 => array("IT304","16540"),
20929 => array("IT305","16534"),
20930 => array("IT306","16569"),
20931 => array("IT401","16405"),
20932 => array("IT402","16573"),
20934 => array("IT403","16546"),
20935 => array("IT404","16568"),
20936 => array("IT405","16570"),
20937 => array("IT406","16567"),
20933 => array("IT501","23039"),
20938 => array("IT502","16403"),
20939 => array("IT601","16560"),
20969 => array("TIB602","16548"),
20968 => array("TIB603","16547"),
20970 => array("TIB604","16564"),
20971 => array("TIB605","16555"),
20972 => array("TIB606","16563"),
21047 => array("VUB401","28260"),
21048 => array("VUB402","28264"),
21057 => array("VUB423","28298"),
21051 => array("VUB424","28301"),
21052 => array("VUB601","28271"),
21059 => array("VUB622","28306"),
21060 => array("VUB624","28308"),
21061 => array("VUB625","28310"),
21039 => array("VUB702","28274"),
19459 => array("VUB101","28230"),
19460 => array("VUB102","28229"),
19461 => array("VUB103","28226"),
19462 => array("VUB104","28223"),
19463 => array("VUB105","26985"),
19464 => array("VUB201","28243"),
19465 => array("VUB202","28241"),
19466 => array("VUB203","28238"),
19467 => array("VUB204","28235"),
21042 => array("VUB301","28244"),
21043 => array("VUB302","28249"),
21044 => array("VUB303","28252"),
21045 => array("VUB304","28255"),
21046 => array("VUB305","28257"),
21049 => array("VUB413","28278"),
21055 => array("VUB414","28280"),
21050 => array("VUB501","28267"),
21053 => array("VUB612","28284"),
21056 => array("VUB614","28288"),
19878 => array("WFB101","24426"),
19879 => array("WFB102","24431"),
19880 => array("WFB103","24447"),
19886 => array("WFB104","52525"),
19881 => array("WFB201","25400"),
19882 => array("WFB202","24476"),
19883 => array("WFB203","24477"),
19884 => array("WFB204","24478"),
19885 => array("WFB205","24694"),
21087 => array("WFB301","24636"),
21088 => array("WFB302","24638"),
21089 => array("WFB303","24648"),
21090 => array("WFB304","24681"),
21091 => array("WFB305","24684"),
21092 => array("WFB306","24479"),
21093 => array("WFB401","32194"),
21094 => array("WFB402","24705"),
21096 => array("WFB403","24706"),
21097 => array("WFB404","24718"),
21098 => array("WFB405","24708"),
21099 => array("WFB406","24709"),
21095 => array("WFB501","28340"),
21100 => array("WFB601","24722"),
21101 => array("WFB602","24723"),
21102 => array("WFB603","24725"),
21103 => array("WFB604","24727"),
21104 => array("WFB605","32185"),
21086 => array("WFB701","32176"),
21085 => array("WFB702","52522"),
21084 => array("WFB703","32188"),
19481 => array("WIB102","27037"),
19482 => array("WIB103","39018"),
19485 => array("WIB202","27079"),
21128 => array("WIB304","27090"),
21136 => array("WIB601","28898"),
21137 => array("WIB602","28370"),
);
	public function main() {
		$this->post = t3lib_div::_POST();
		$erg .= '<div class="Tools">';
		$erg .= '<form name="modulbeschreibungen" method="post" action="">';
		$erg .= 'Fakultät: <select name="fakultaet">
						<option value="all">Alle</option>
						<option value="AN">AN</option>
						<option value="BW">BW</option>
						<option value="FZ">FZ</option>
						<option value="GL">GL</option>
						<option value="IT">IT</option>
						<option value="MB">MB</option>
						<option value="ME">ME</option>
						<option value="VU">VU</option>
						<option value="WI">WI</option>
						</select>
						<br/>';				
		$erg .= 'CSV-Daten Module: <input type="file" name="sixPosDateiModule"/><br/>';				
		$erg .= 'CSV-Daten Teill.: <input type="file" name="sixPosDateiTeilleistungen"/><br/>';				
		$erg .= '<input type="submit" name="exportModulbeschreibungenSql" value="SQL-Dump generieren"/><br/><br/>';
		$erg .= 'Module: <input type="file" name="module"/><br/>';				
		$erg .= 'Teilleistungen: <input type="file" name="teilleistungen"/><br/>';				
		$erg .= '<input type="submit" name="teilleistungenZuordnen" value="Teilleistungen zuordnen"/><br/>';
		$erg .= '<input type="submit" name="teilleistungTabelleErstellen" value="Teilleistungen Pordnummern zuordnen"/><br/>';
		$erg .= '</form>';				
		$erg .= '</div>';
		$exportModulbeschreibungenSql = $this->post[exportModulbeschreibungenSql];
		if ($exportModulbeschreibungenSql!='') {
			$fakultaet = $this->post['fakultaet'];
			$importDateiModule = $_FILES['sixPosDateiModule']['tmp_name'];
			$importDateiTeilleistungen = $_FILES['sixPosDateiTeilleistungen']['tmp_name'];
			if (empty($importDateiModule) || empty($importDateiTeilleistungen)) {
				$erg .= '<h3 color="red">Bitte beide Dateien auswählen</h3>';
			} else {
				$erg .= $this->exportModulbeschreibungenSql($importDateiModule,$importDateiTeilleistungen,$fakultaet);
			}	
		} 
		
		$teilleistungenZuordnen = $this->post[teilleistungenZuordnen];
		if ($teilleistungenZuordnen!='') {
			$importDateiMod = $_FILES['module']['tmp_name'];
			$importDateiTl = $_FILES['teilleistungen']['tmp_name'];
			if (empty($importDateiMod) || empty($importDateiTl)) {
				$erg .= '<h3 color="red">Bitte beide Dateien auswählen</h3>';
			} else {
				$erg .= $this->teilleistungenZuordnen($importDateiMod,$importDateiTl);
			}
		}

		$teilleistungTabelleErstellen = $this->post[teilleistungTabelleErstellen];
		if ($teilleistungTabelleErstellen!='') {
			$importDateiMod = $_FILES['module']['tmp_name'];
			$importDateiTl = $_FILES['teilleistungen']['tmp_name'];
			if (empty($importDateiMod) || empty($importDateiTl)) {
				$erg .= '<h3 color="red">Bitte beide Dateien auswählen</h3>';
			} else {
				$erg .= $this->teilleistungTabelleErstellen($importDateiMod,$importDateiTl);
			}
		}
		return $erg;
	}

	function teilleistungenZuordnen($importDateiModule,$importDateiTeilleistungen) {
		$datei = fopen($importDateiModule, "r"); 
		$modulDaten = array();
		while ( ($daten = fgetcsv ($datei, 10000, ";")) !== FALSE ) {
			$sixId = $daten[5];
			$modulDaten[$daten[0] . $daten[1]] = $daten[2];
		}
		fclose($datei);
		$datei = fopen($importDateiTeilleistungen, "r"); 
		$datenTeilleistungen = array();
		while ( ($daten = fgetcsv ($datei, 10000, ";")) !== FALSE ) {
			$pordNummerModul = $modulDaten[$daten[7] . $daten[8]];
			$datenTeilleistungen[] = array($pordNummerModul,
															 			 $daten[7],
															 			 $daten[10],
															 			 $daten[11],
															 			 $daten[1]
															 			 );
			
		}
		fclose($datei);
			
		$ergListe = array();
		foreach ($datenTeilleistungen as $data) {
			$out .= '"' . $data[0] . '";';
			$out .= '"' . $data[1] . '";';
			$out .= '"' . $data[2] . '";';
			$out .= '"' . $data[3] . '";';
			$out .= '"' . $data[4] . '";' . "\n";
		}
		$jahr = date('Y');
		$monat = date('m');
		$tag = date('d');
		$dateiname = '____teilleistungen_six-pos_' . $jahr. '_' . $monat. '_' . $tag . '.csv';
		header("Content-type: application/text");
		header('Expires: ' . gmdate('D, d M Y H:i:s') . ' GMT');
		header('Content-Disposition: attachment; filename="' . $dateiname . '"');
		header('Pragma: no-cache');
		print $out;
//		print $out2;
//		print $doppelte;
		exit();
	}

	function teilleistungTabelleErstellen($importDateiModule,$importDateiTeilleistungen) {
		$datei = fopen($importDateiModule, "r"); 
		$modulDaten = array();
		fgetcsv ($datei, 10000, ";");
		while ( ($daten = fgetcsv ($datei, 10000, ";")) !== FALSE ) {
			$hash = md5($daten[0] . $daten[1] . $daten[2] . $daten[3]);
			if (!isset($modulDaten[$hash])) {
				$modulDaten[$hash] = $daten[4];
			}
		}
		fclose($datei);

		$datei = fopen($importDateiTeilleistungen, "r"); 
		$datenTeilleistungen = array();
		fgetcsv ($datei, 10000, ";");
		while ( ($daten = fgetcsv ($datei, 10000, ";")) !== FALSE ) {
			$hash = md5($daten[0] . $daten[1] . $daten[2] . $daten[3]);
			
			if (!empty($daten[5]) && isset($modulDaten[$hash])) {
				if (!isset($datenTeilleistungen[$daten[5]])) {
					$datenTeilleistungen[$daten[5]] = array($modulDaten[$hash],
																	 			 $daten[2],
																	 			 $daten[4],
																	 			 $daten[6]
																	 			 );
				}
			}
		}
		fclose($datei);
			
		$ergListe = array();
		foreach ($datenTeilleistungen as $pordnr=>$data) {
			$out .= '"' . $data[0] . '";';
			$out .= '"' . $data[1] . '";';
			$out .= '"' . $data[2] . '";';
			$out .= '"' . $pordnr . '";';
			$out .= '"' . $data[3] . '";' . "\n";
		}
		$jahr = date('Y');
		$monat = date('m');
		$tag = date('d');
		$dateiname = '____teilleistungen_six-pos_' . $jahr. '_' . $monat. '_' . $tag . '.csv';
		header("Content-type: application/text");
		header('Expires: ' . gmdate('D, d M Y H:i:s') . ' GMT');
		header('Content-Disposition: attachment; filename="' . $dateiname . '"');
		header('Pragma: no-cache');
		print $out;
//		print $out2;
//		print $doppelte;
		exit();
	}

	function csvAbgleichAlt($importDateiAlt,$importDateiNeu) {
			$datei = fopen($importDateiAlt, "r"); 
			$datenAlt = array();
			while ( ($daten = fgetcsv ($datei, 1000, ";")) !== FALSE ) {
				$sixId = $daten[5];
				$datenAlt[$sixId][] = $daten;
			}
			fclose($datei);
			$datei = fopen($importDateiNeu, "r"); 
			$datenNeu = array();
			while ( ($daten = fgetcsv ($datei, 1000, ";")) !== FALSE ) {
				$datenNeu[] = $daten;
			}
			fclose($datei);
			$datenMerge = array();
			
			$out = 'public $pordNummern = array(<br>';

			$ergListe = array();
			foreach ($datenNeu as $data) {
				$sixId = $data[6];
				if (isset($datenAlt[$sixId])) {
					$gefunden = FALSE;
					foreach ($datenAlt[$sixId] as $dataOld) {
						if (!$gefunden) {
							if ($dataOld[0]==$data[0] && 
									$dataOld[1]==$data[1] && 
									$dataOld[2]==$data[2]) {
								if (!in_array($dataOld[6],$ergListe)) {
									$out .= $dataOld[6] . ' => array("' . $data[5] . '","' . $data[6] . '"),<br>';
									$ergListe[] = $dataOld[6];
								}		
								$gefunden = TRUE;
							}
						}
					}
				} else {
//					$out .= $data[7] . ' => array("' . $data[5] . '","' . $data[6] . '"),<br>';
				}
			}
			$out .= ');<br>';
			echo $out;
	}

	function exportModulbeschreibungenSql($importDateiModule,$importDateiTeilleistungen,$fakultaet) {
		$sqlExport = $this->exportModulbeschreibungen($importDateiModule,$fakultaet);
		$sqlExport .= $this->exportTeilleistungen($importDateiTeilleistungen,$fakultaet);
		
		$jahr = date('Y');
		$monat = date('m');
		$tag = date('d');
		$dateiname = 'module' . '_' . strtolower($fakultaet) . '_' . $jahr. '_' . $monat. '_' . $tag . '.sql';
		header("Content-type: application/text");
		header('Expires: ' . gmdate('D, d M Y H:i:s') . ' GMT');
		header('Content-Disposition: attachment; filename="'.$dateiname.'"');
		header('Pragma: no-cache');
		print $sqlExport;
		exit();
	}

	function exportModulbeschreibungen($importDatei,$fakultaet) {

		$this->setzeFeUserLinks();
		$datei = fopen($importDatei, "r"); 
		if (!$datei) {
			return "Bitte erst eine Datei auswählen";
		}
		$ids = array();
		while ( ($importDaten = fgetcsv ($datei, 10000, ";")) !== FALSE ) {
			if (count($importDaten)>1) {
				if ($fakultaet=='all' || $importDaten['3']==$fakultaet) {
					$ids[] = $importDaten;
				}
			}
		}
		fclose($datei);
		
		$arbeitsaufwand = array('Kontaktzeit',
														'Prüfungsvorbereitung',
														'Selbststudium');
		he_tools_db::sixCmsConnect();
		$sqlFelddaten = 'SELECT DISTINCT fieldname FROM sixcms_article_data 
										 WHERE sixcms_article_data.area_id = 336
										 			 AND fieldname<>"colspan"
										 			 AND fieldname<>"spo_version"
										 			 AND fieldname<>"modulnummer"
										 			 AND fieldname<>"zeile"';
		$abfrageFelddaten = he_tools_db::six_sql_query($sqlFelddaten);
		$felder[] = 'sixId';
		$felder[] = 'modulnummer';
		$felder[] = 'pordNummer';
		while ($feldDaten = he_tools_db::six_sql_fetch_assoc($abfrageFelddaten)) {
			$felder[] = $feldDaten[fieldname];
		}
		$felder[] = 'modulsprache_de';
		$felder[] = 'modulsprache_en';
		$felder[] = 'verantwortlicher';
		
		$modulDatenListe = array();
/*
 * Test für Rechnernetze ### START ###
$ids = array(20954 => array("IT405","16570"));		
/*
 * Test für Rechnernetze ### ENDE ###
 */
		foreach ($ids as $pordNr=>$importIds) {
			$sql = 'SELECT id,title FROM sixcms_article 
							WHERE area_id = 336
										AND deleted=0 and published=1
										AND id = ' . $importIds[1];
			$abfrage = he_tools_db::six_sql_query($sql);
			$modulDatensatz = array();
			if ($daten = he_tools_db::six_sql_fetch_assoc($abfrage)) {
			
				$modulDatensatz[title] = $daten[title];
				$sqlModuldaten = 'SELECT sixcms_article_data.fieldname, sixcms_article_data.value 
													FROM sixcms_article_data 
													INNER JOIN sixcms_article ON 
																sixcms_article_data.article_id = sixcms_article.id
													WHERE sixcms_article_data.area_id = 336 
																AND sixcms_article.id = ' . $daten[id] . '
																ORDER BY sixcms_article_data.fieldname';
				$modulAbfrage = he_tools_db::six_sql_query($sqlModuldaten);
				while ($moduldaten = he_tools_db::six_sql_fetch_assoc($modulAbfrage)) {
					if ($moduldaten[fieldname]!='colspan' &&
							$moduldaten[fieldname]!='zeile' &&
							$moduldaten[fieldname]!='modulnummer') {
						if ($moduldaten[fieldname]=='wahlpflicht') {
							if ($moduldaten[value]=='on') {
								$modulDatensatz['wahlpflicht'] = 1;
							} else {
								$modulDatensatz['wahlpflicht'] = 0;
							}
						} else {
							$wert = $moduldaten[value];
							$wertClean = str_replace("\n","",str_replace("\r","",nl2br($wert)));
							$wertClean = str_replace('"','\"',$wertClean);
							$wertClean = str_replace(',','\,',$wertClean);
							$modulDatensatz[$moduldaten[fieldname]] = $wertClean;
						}
					}
				}
				foreach ($arbeitsaufwand as $feldname) {
					$speicherFeldname = strtolower($this->umlauteKorrigieren($feldname));
					$modulDatensatz[$speicherFeldname] = $this->gibArbeitsaufwand($daten[id],$feldname);
				}
				$this->gibModulsprache($daten[id],$deutsch,$englisch);
				$modulDatensatz['modulsprache_de'] = $deutsch;
				$modulDatensatz['modulsprache_en'] = $englisch;

				$sqlVerantw = 'SELECT username.value
													FROM sixcms_article_article
													INNER JOIN sixcms_article_data AS username ON username.article_id = sixcms_article_article.rel_id
													WHERE sixcms_article_article.fieldname =  "rel_personaldaten"
													AND username.fieldname =  "login"
													AND sixcms_article_article.article_id=' . $daten[id];
				$abfrageVerantw = he_tools_db::six_sql_query($sqlVerantw);
				$modulDatensatz['verantwortlicher'] = '';
				$verantwortliche = array();
				while ($datenVerantw = he_tools_db::six_sql_fetch_assoc($abfrageVerantw)) {
					$verantwortliche[] = $datenVerantw['value'];
//					$modulDatensatz['verantwortlicher'] .= str_replace('"','\"',$this->feUserLinks[$username]);
				} 
				$modulDatensatz['verantwortlicher'] = implode('\,',$verantwortliche);
				
				$modulDatensatz['modulnummer'] = $importIds[0];
				$modulDatensatz['sixId'] = $importIds[1];
				$modulDatensatz['pordNummer'] = $importIds[2];
				$modulDatenListe[] = $modulDatensatz;
			}
		}
		he_tools_db::six_disconnect();		

		$arbeitsaufwandFeldnamen = array();
		foreach ($arbeitsaufwand as $feldname) {
			$arbeitsaufwandFeldnamen[] = strtolower($this->umlauteKorrigieren($feldname));
		}
		$felder = array_merge($felder,$arbeitsaufwandFeldnamen);
		$sqlExport = $this->ezeugeSqlExportModule($modulDatenListe,$felder);
		return $sqlExport;
	}

	function exportTeilleistungen($importDatei,$fakultaet) {
		$datei = fopen($importDatei, "r"); 
		if (!$datei) {
			return "Bitte erst eine Datei auswählen";
		}
		$ids = array();
		while ( ($importDaten = fgetcsv ($datei, 10000, ";")) !== FALSE ) {
			if (count($importDaten)>1) {
/*
				$ids[$importDaten[0]] = array($importDaten[1],
																			$importDaten[2],
																			$importDaten[3]);
*/
				if ($fakultaet=='all' || $importDaten['4']==$fakultaet) {
					$ids[] = $importDaten;
				}
			}
		}
		fclose($datei);
		
		he_tools_db::sixCmsConnect();
		$felder = array();
		$felder[] = 'sixId';
		$felder[] = 'modulnummer';
		$felder[] = 'pordNummerModul';
		$felder[] = 'pordNummer';
		$felder[] = 'titel_de';
		$felder[] = 'titel_en';
		$felder[] = 'lehrform_de';
		$felder[] = 'lehrform_en';
		$felder[] = 'umfang_de';
		$felder[] = 'umfang_en';
		$felder[] = 'arbeitszeit' ;
		$felder[] = 'lernziele_de';
		$felder[] = 'lernziele_en';
		$felder[] = 'pruefung_de';
		$felder[] = 'pruefung_en';
		$felder[] = 'unterrichtssprache_de';
		$felder[] = 'unterrichtssprache_en';		
		$felder[] = 'verantwortlicher';
		
		
		$modulDatenListe = array();
/*
 * Test für Rechnernetze
$ids = array(17184 => array("IT405","31865","20954"),
						 17185 => array("IT405","31866","20954"));		
 */
		foreach ($ids as $importIds) {
			$modulDatensatz = $this->gibTeilleistungen($importIds[2]);
			$modulDatensatz['modulnummer'] = $importIds[1];
			$modulDatensatz['sixId'] = $importIds[2];
			$modulDatensatz['pordNummerModul'] = $importIds[0];
			$modulDatensatz['pordNummer'] = $importIds[3];
			$modulDatenListe[] = $modulDatensatz;
		}
		he_tools_db::six_disconnect();		
		
		$sqlExport = $this->ezeugeSqlExportTeilleistungen($modulDatenListe,$felder);
		return $sqlExport;
	}
		
	function gibTeilleistungen($article_id) {
		$felder = '"lv_titel",' .
							'"lv_titel_en",' .
							'"title_de",' .
							'"title_en",' .
							'"umfang",' .
							'"umfang_en",' .
							'"arbeitszeit",' .
							'"lernziele_de",' .
							'"lernziele_en",' .
							'"pruefung_de",' .
							'"pruefung_en"'
		;
		$sql = 'SELECT fieldname,value FROM sixcms_article_data
						WHERE sixcms_article_data.area_id = 427 
							AND sixcms_article_data.fieldname IN (' . $felder . ') 
							AND sixcms_article_data.article_id=' . $article_id;
		$abfrage = he_tools_db::six_sql_query($sql);
		$lvDaten = array();
		while ($daten = he_tools_db::six_sql_fetch_assoc($abfrage)) {
			$wert = $daten[value];
			$wertClean = str_replace("\n","",str_replace("\r","",nl2br($wert)));
			$wertClean = str_replace('"','\"',$wertClean);
			$wertClean = str_replace(',','\,',$wertClean);
			$lvDaten[$daten['fieldname']] = $wertClean;
		}
		$sqlSprache = 'SELECT sprache_de.value as sprache_de,sprache_en.value as sprache_en  FROM sixcms_article_article
						INNER JOIN sixcms_article_data as sprache_de ON sprache_de.article_id = sixcms_article_article.rel_id
						INNER JOIN sixcms_article_data as sprache_en ON sprache_en.article_id = sixcms_article_article.rel_id
						WHERE 
							sixcms_article_article.area_id = 427 
							AND sixcms_article_article.fieldname="rel_teilmodulsprache" 
							AND sprache_de.fieldname="title_de" 
							AND sprache_en.fieldname="title_en" 
							AND sixcms_article_article.article_id=' . $article_id;
		$abfrageSprache = he_tools_db::six_sql_query($sqlSprache);
		if ($datenSprache = he_tools_db::six_sql_fetch_assoc($abfrageSprache)) {
			$lvDaten[teilmodulsprache_de] = $datenSprache['sprache_de'];
			$lvDaten[teilmodulsprache_en] = $datenSprache['sprache_en'];
		}
		$sqlVerantw = 'SELECT username.value
											FROM sixcms_article_article
											INNER JOIN sixcms_article_data AS username ON username.article_id = sixcms_article_article.rel_id
											WHERE sixcms_article_article.fieldname =  "lv_verantwortlicher"
											AND username.fieldname =  "login"
											AND sixcms_article_article.article_id=' . $article_id;
		$abfrageVerantw = he_tools_db::six_sql_query($sqlVerantw);
		$lvDaten[lv_verantwortlicher] = '';
		while ($datenVerantw = he_tools_db::six_sql_fetch_assoc($abfrageVerantw)) {
			$username = $datenVerantw['value'];
//				$lvDaten[lv_verantwortlicher] .= $this->feUserLinks[$username];
			$lvDaten[lv_verantwortlicher] .= $username;				
		}
		
		if (empty($lvDaten['umfang_en'])) {
			$lvDaten['umfang_en'] = $lvDaten['umfang'];
		}
		
		$teilleistungenDaten['titel_de'] = $lvDaten['lv_titel'];
		$teilleistungenDaten['titel_en'] = $lvDaten['lv_titel_en'];
		$teilleistungenDaten['lehrform_de'] = $lvDaten['title_de'];
		$teilleistungenDaten['lehrform_en'] = $lvDaten['title_en'];
		$teilleistungenDaten['umfang_de'] = $lvDaten['umfang'];
		$teilleistungenDaten['umfang_en'] = $lvDaten['umfang_en'];
		$teilleistungenDaten['arbeitszeit'] = $lvDaten['arbeitszeit'];
		$teilleistungenDaten['lernziele_de'] = $lvDaten['lernziele_de'];
		$teilleistungenDaten['lernziele_en'] = $lvDaten['lernziele_en'];
		$teilleistungenDaten['pruefung_de'] = $lvDaten['pruefung_de'];
		$teilleistungenDaten['pruefung_en'] = $lvDaten['pruefung_en'];
		$teilleistungenDaten['verantwortlicher'] = $lvDaten['lv_verantwortlicher'];
		$teilleistungenDaten['unterrichtssprache_de'] = $lvDaten['teilmodulsprache_de'];
		$teilleistungenDaten['unterrichtssprache_en'] = $lvDaten['teilmodulsprache_de'];
		return $teilleistungenDaten;
	}
	
	function setzeFeUserLinks() {
	require_once(PATH_tslib.'class.tslib_fe.php');
	require_once(PATH_t3lib.'class.t3lib_cs.php');
	require_once(PATH_tslib.'class.tslib_content.php');
	require_once(PATH_t3lib.'class.t3lib_tstemplate.php');
	require_once(PATH_t3lib.'class.t3lib_page.php');
	$TSFEclassName = t3lib_div::makeInstanceClassName('tslib_fe');
	if (!is_object($GLOBALS['TT'])) {
		$GLOBALS['TT'] = new t3lib_timeTrack;
		$GLOBALS['TT']->start();
	}
	$GLOBALS['TSFE'] = new $TSFEclassName($GLOBALS['TYPO3_CONF_VARS'],$this->pid,'0',1,'','','','');
	$GLOBALS['TSFE']->connectToMySQL();
	$GLOBALS['TSFE']->initFEuser();
	$GLOBALS['TSFE']->fetch_the_id();
	$GLOBALS['TSFE']->getPageAndRootline();
	$GLOBALS['TSFE']->initTemplate();
	$GLOBALS['TSFE']->tmpl->getFileName_backPath = PATH_site;
	$GLOBALS['TSFE']->forceTemplateParsing = 1;
	$GLOBALS['TSFE']->getConfigArray();	
	
		$cObj = t3lib_div::makeInstance('tslib_cObj');
		$cObj->start(array(),'');
		$urlParameters = array('L' => 0);
		
		$profilfelder = 'tx_hepersonen_akad_grad,username,first_name,last_name,tx_hepersonen_profilseite,tx_hepersonen_profildaten';
		$profiltabelle = 'fe_users';
		
		$benutzerGruppen = array('PROFESSOR','LB','MITARBEITER','PROJEKT-MA','HAUSMEISTER','SEKRETARIAT','LEITUNG','AUSZUBILDENDE');
		$bedingungBenutzerGruppen = ' AND (' . 
																tx_he_personen_util::gibBedingungBenutzergruppen($benutzerGruppen) . 
																') ';
		$profilbedingung = 'deleted=0 AND disable=0' . $bedingungBenutzerGruppen;
		$profilabfrage = $GLOBALS['TYPO3_DB']->exec_SELECTquery($profilfelder,$profiltabelle,$profilbedingung);
		
		while ($daten = $GLOBALS['TYPO3_DB']->sql_fetch_assoc($profilabfrage)) {
			$linkUrl = $cObj->getTypoLink_URL($daten['tx_hepersonen_profilseite'],$urlParameters);
			$linkUrl = str_replace('.de/typo3/de','.de/de',$linkUrl);
			$profil_array = unserialize($daten['tx_hepersonen_profildaten']);
			if (!is_array($profil_array)) {
				$profil_array = array();
				$akadGrad = '';
			} else {
				$akadGrad = $profil_array[prof_titel_liste];
				if (empty($akadGrad)) {
					$akadGrad = $profil_array[akad_grad] . ' ';
				} else {
					$akadGrad .= ' ';
				}
			}
			$person = $akadGrad . $daten['first_name'] . ' ' . $daten['last_name'];
			$this->feUserLinks[$daten['username']] = '<a href="' . $linkUrl . '">' . $person . '</a>';
		}
	}
		
	function gibModulsprache($article_id,&$deutsch,&$englisch) {
		$sql = 'SELECT sprache_de.value as sprache_de,sprache_en.value as sprache_en  FROM sixcms_article_article
						INNER JOIN sixcms_article_data as sprache_de ON sprache_de.article_id = sixcms_article_article.rel_id
						INNER JOIN sixcms_article_data as sprache_en ON sprache_en.article_id = sixcms_article_article.rel_id
						WHERE 
							sixcms_article_article.area_id = 336 
							AND sixcms_article_article.fieldname="rel_modulsprache" 
							AND sprache_de.fieldname="title_de" 
							AND sprache_en.fieldname="title_en" 
							AND sixcms_article_article.article_id=' . $article_id;
		$abfrage = he_tools_db::six_sql_query($sql);
		if ($daten = he_tools_db::six_sql_fetch_assoc($abfrage)) {
			$deutsch = $daten['sprache_de'];
			$englisch = $daten['sprache_en'];
		}
		return $ergebnis;
	}

	function gibArbeitsaufwand($article_id,$feldname) {
		$ergebnis = '';
		$sql = 'SELECT stunden.value  FROM sixcms_article_article
						INNER JOIN sixcms_article_article as arbeitsaufwand ON arbeitsaufwand.article_id = sixcms_article_article.rel_id
						INNER JOIN sixcms_article as titel ON titel.id = arbeitsaufwand.rel_id
						INNER JOIN sixcms_article_data as stunden ON stunden.article_id = arbeitsaufwand.article_id
						WHERE sixcms_article_article.area_id = 336 AND 
						sixcms_article_article.fieldname="rel_modulbeschreibungen_arbeitsaufwand" AND
						arbeitsaufwand.fieldname="rel_modulbeschreibungen_arbeitsaufwand_title" AND
						stunden.fieldname="stunden" AND
						titel.title = "' . $feldname . '" AND
						sixcms_article_article.article_id=' . $article_id;
		$abfrage = he_tools_db::six_sql_query($sql);
		if ($daten = he_tools_db::six_sql_fetch_assoc($abfrage)) {
			$ergebnis = $daten['value'];
		}
		return $ergebnis;
	}
	
	public function ezeugeSqlExportModule(&$moduldaten,$felder) {
		$uid = 0;
		$fehler = array();
		$sql .=	'CREATE TABLE IF NOT EXISTS sixcms_module_data (
 uid int(11) NOT NULL DEFAULT "0",
';
		foreach($felder as $index=>$feldname) {
			if ($feldname=='sixId' OR $feldname=='pordNummer' OR $feldname=='pordNummerModul' ) {
			$sql .=	' ' . $feldname . ' int(11) NOT NULL DEFAULT "0",
';
			} else {
			$sql .=	' ' . $feldname . ' mediumtext NOT NULL DEFAULT "",
';
			}
		}
		$sql .=	'PRIMARY KEY (uid)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
';
	
		$start = 0;
		$anzahl = 100;
		while ($start<count($moduldaten)) {
			$sqlBlock = '
INSERT INTO sixcms_module_data (uid';
			foreach($felder as $index=>$feldname) {
				$sqlBlock .=	',' . $feldname;
			}
			$sqlBlock .=	') VALUES
';		
			$skip = 0;
			foreach($moduldaten as $daten) {
				if ($skip>=$start && $skip<$start+$anzahl) {
					$feldWerte = '';
					foreach($felder as $feldIndex=>$feldname) {
						if (isset($daten[$feldname])) {
							$wert = $daten[$feldname];
						} else {
							$wert = '';
						}
						$feldWerte .=	',"' . $wert . '"';
					}
					$sqlBlock .=	'(' . $uid . $feldWerte. '),
';
					$uid++;
/* Nicht zugeordnete Module nicht exportieren
					
					if (!$gefunden) {
						$sqlBlock .=	'(' . $uid . ',' . $index . ',0' . $feldWerte . '),
';
						$uid++;
					}
*/
				}
				$skip++;
			}
			$sql .= substr($sqlBlock,0,strrpos($sqlBlock,',')) . ';
';
			$start += $anzahl;
		}
		$sql .= '

';
		return $sql;
	}
	
	public function ezeugeSqlExportTeilleistungen(&$teilleistungenDaten,$felder) {
		$uid = 0;
		$fehler = array();
		$sql .=	'CREATE TABLE IF NOT EXISTS sixcms_module_tl_data (
 uid int(11) NOT NULL DEFAULT "0",
';
		foreach($felder as $index=>$feldname) {
			if ($feldname=='sixId' OR $feldname=='pordNummer' OR $feldname=='pordNummerModul' ) {
				$sql .=	' ' . $feldname . ' int(11) NOT NULL DEFAULT "0",
';
			} else {
			$sql .=	' ' . $feldname . ' mediumtext NOT NULL DEFAULT "",
';
			}
		}
		$sql .=	'PRIMARY KEY (uid)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
';
	
		$start = 0;
		$anzahl = 100;
		while ($start<count($teilleistungenDaten)) {
			$sqlBlock = '
INSERT INTO sixcms_module_tl_data (uid';
			foreach($felder as $index=>$feldname) {
				$sqlBlock .=	',' . $feldname;
			}
			$sqlBlock .=	') VALUES
';		
			$skip = 0;
			foreach($teilleistungenDaten as $daten) {
				if ($skip>=$start && $skip<$start+$anzahl) {
					$feldWerte = '';
					foreach($felder as $feldIndex=>$feldname) {
						if (isset($daten[$feldname])) {
							$wert = $daten[$feldname];
						} else {
							$wert = '';
						}
						$feldWerte .=	',"' . $wert . '"';
					}
					$sqlBlock .=	'(' . $uid . $feldWerte. '),
';
					$uid++;
				}
				$skip++;
			}
			$sql .= substr($sqlBlock,0,strrpos($sqlBlock,',')) . ';
';
			$start += $anzahl;
		}
		return $sql;
	}
	
	function sixSql() {
		$post = t3lib_div::_POST();
		$sqlAbfrage = $post[sqlAbfrage];
		if ($sqlAbfrage!='') {
			$sixSql = $post[sixSql];
			$erg .= $this->sixSqlAbfrage($sixSql);
		}
		$erg .= '<form name="six-sql" method="post" action="'.$this->file.'">';
		$erg .= '<textarea rows="20" cols="80" name="sixSql"></textarea>';
		$erg .= '<input type="submit" name="sqlAbfrage" value="ausführen"/></form>';				
		$erg .= '</form>';
		return $erg;
	}
	
	function sixSqlAbfrage($sql) {
		he_tools_db::sixCmsConnect();
		$res = '';
		$abfrage = he_tools_db::six_sql_query($sql);
		while ($feldDaten = he_tools_db::six_sql_fetch_assoc($abfrage)) {
			foreach ($feldDaten as $key=>$value) {
				$res .= $value . ';';
			}
			$res .= '<br>';
		}
		return $res;
		return '<pre>' . print_r($res,true) . '</pre>';
	}

	function wandleUtfUmlaute($wort) {
   	$wort = str_replace("\xc3\xa4","ae",$wort);
   	$wort = str_replace("\xc3\xb6","oe",$wort);
   	$wort = str_replace("\xc3\xbc","ue",$wort);
   	$wort = str_replace("\xc3\x84","ae",$wort);
   	$wort = str_replace("\xc3\x96","oe",$wort);
   	$wort = str_replace("\xc3\x9c","ue",$wort);
   	$wort = str_replace("\xc3\x9f","ss",$wort);
   	return $wort;
  }

   function umlauteKorrigieren($text) {
 		$text = str_replace("ä","ae",$text);
 		$text = str_replace("ö","oe",$text);
 		$text = str_replace("ü","ue",$text);
 		$text = str_replace("Ä","Ae",$text);
 		$text = str_replace("Ö","Oe",$text);
 		$text = str_replace("Ü","Ue",$text);
 		$text = str_replace("ß","ss",$text);
 		$text = str_replace("/","-",$text);
 		$text = str_replace(":","",$text);
 		return $text;
  }
	
	function sixModuleExportieren() {
		$this->post = t3lib_div::_POST();
		$erg .= '<div class="Tools">';
		$erg .= '<form name="modulbeschreibungen" method="post" action="">';
		$erg .= 'SPO-Version: <input type="text" name="spoVersion"/><br/>';				
//		$erg .= 'CSV-Daten: <input type="file" name="sixPosDatei"/><br/>';				
		$erg .= '<input type="submit" name="exportSixModule" value="Six-Module exportieren"/><br/><br/>';
		$erg .= '</form>';				
		$erg .= '</div>';
		$exportSixModule = $this->post[exportSixModule];
		if ($exportSixModule!='') {
//			$importDatei = $_FILES['sixPosDatei']['tmp_name'];
			$spoVersion = $this->post['spoVersion'];
			$erg .= $this->exportSixModule($spoVersion);
		} 
		return $erg;
	}
	
	function exportSixModule($spoVersion='') {
/*		
		$datei = fopen($importDatei, "r"); 
		if (!$datei) {
			return "Bitte erst eine Datei auswählen";
		}
		$zugeordneteSixIds = array();
		while ( ($importDaten = fgetcsv ($datei, 10000, ";")) !== FALSE ) {
			if (count($importDaten)>1) {
				$zugeordneteSixIds[$importDaten[1]] = array('modulCode'=>$importDaten[0],
																										'pordNr'=>$importDaten[2]);
			}
		}
		fclose($datei);
*/		
		he_tools_db::sixCmsConnect();
	//	Studiengänge abfragen
		$bedingung = 'SELECT title,id FROM sixcms_article
													 WHERE published=1 AND area_id=35 
													 ORDER BY title';
		$abfrage = he_tools_db::six_sql_query($bedingung);
		$studiengaenge = array();
		while ($werte = he_tools_db::six_sql_fetch_assoc($abfrage)) {			
			if (preg_match('#master#i',$werte['title']) ||
					preg_match('#(msc)#i',$werte['title']) ||
					preg_match('#(mba)#i',$werte['title'])) {						
				$master = TRUE;
			} else {
				$master = FALSE;
			}
			$studiengaenge[$werte['id']] = array('name' => iconv("UTF-8", "ISO-8859-1",$werte['title']),
																					 'master' => $master);
		}
		
		//	Fakultäten abfragen
		$bedingung = 'SELECT title,id FROM sixcms_article
													 WHERE published=1 AND area_id=29 
													 ORDER BY title';
		$abfrage = he_tools_db::six_sql_query($bedingung);
		$fbs = array();
		while ($werte = he_tools_db::six_sql_fetch_assoc($abfrage)) {			
			$fbs[$werte['id']] = iconv("UTF-8", "ISO-8859-1",$werte['title']);
		}
		
	//	Schwerpunkte abfragen
		$bedingung = 'SELECT title,id FROM sixcms_article
													 WHERE published=1 AND area_id=386 
													 ORDER BY title';
		$abfrage = he_tools_db::six_sql_query($bedingung);
		$schwerpunkte = array();
		while ($werte = he_tools_db::six_sql_fetch_assoc($abfrage)) {			
			$schwerpunkte[$werte['id']] = iconv("UTF-8", "ISO-8859-1",$werte['title']);
		}
		if (empty($spoVersion)) {
			$whereSpo = 'TRUE';
		} else {
			$whereSpo = 'spo.value=' . $spoVersion;
		}
	//	Modulnamen abfragen
		$bedingung = 'SELECT sixcms_article.title,sixcms_article.id,sixcms_article_data.value as modulnummer
										FROM sixcms_article
										INNER JOIN sixcms_article_data ON sixcms_article.id=sixcms_article_data.article_id
										INNER JOIN sixcms_article_data as spo ON sixcms_article.id=spo.article_id
										WHERE sixcms_article.published=1 
													AND sixcms_article.area_id=336 
													AND sixcms_article_data.fieldname="modulnummer"
													AND spo.fieldname="spo_version"
													AND ' . $whereSpo . '
									';
		$abfrage = he_tools_db::six_sql_query($bedingung);
		$modulNamen = array();
		while ($werte = he_tools_db::six_sql_fetch_assoc($abfrage)) {			
			$modulNamen[$werte['id']] = array('name' => iconv("UTF-8", "ISO-8859-1",$werte['title']),
																			  'nr' => $werte['modulnummer']);
		}
	//	Alle Module abfragen
		$bedingung = 'SELECT sixcms_article.id,sixcms_article_data.value as semester_nr
									FROM sixcms_article
									INNER JOIN sixcms_article_data ON sixcms_article.id=sixcms_article_data.article_id
									WHERE sixcms_article.published=1 
												AND sixcms_article.area_id=389
												AND sixcms_article_data.fieldname="semester_nr"
									';
		$abfrage = he_tools_db::six_sql_query($bedingung);
		$modulzuordnung = array();
		$sixIds = array_keys($zugeordneteSixIds);
		while ($modulzuordnung = he_tools_db::six_sql_fetch_assoc($abfrage)) {
			$modulId = $modulzuordnung['id'];
			$semester_nr = $modulzuordnung['semester_nr'];
			$bedingungFb = 'SELECT rel_id  
									  FROM sixcms_article_article
										WHERE article_id=' . $modulId . '
										AND fieldname="rel_fachbereich"
										';
			$abfrageFb = he_tools_db::six_sql_query($bedingungFb);
			if ($werteFb = he_tools_db::six_sql_fetch_assoc($abfrageFb)) {
				$fb = $werteFb['rel_id'];
			}
			$bedingungMod = 'SELECT rel_id  
									  FROM sixcms_article_article
										WHERE article_id=' . $modulId . '
										AND fieldname="rel_module"
										';
			$abfrageMod = he_tools_db::six_sql_query($bedingungMod);
			while ($werteMod = he_tools_db::six_sql_fetch_assoc($abfrageMod)) {
				$modul = $werteMod['rel_id'];
//				if (in_array($modul,$sixIds)) {
					$bedingungSp = 'SELECT rel_id  
											  FROM sixcms_article_article
												WHERE article_id=' . $modulId . '
												AND fieldname="rel_schwerpunkte"
												';
					$abfrageSp = he_tools_db::six_sql_query($bedingungSp);
					if ($werteSp = he_tools_db::six_sql_fetch_assoc($abfrageSp)) {
						$schwerpunkt = $werteSp['rel_id'];
						$bedingungSg = 'SELECT rel_id  
												  FROM sixcms_article_article
													WHERE article_id=' . $modulId . '
													AND fieldname="rel_studiengaenge"
													';
						$abfrageSg = he_tools_db::six_sql_query($bedingungSg);
						while ($werteSg = he_tools_db::six_sql_fetch_assoc($abfrageSg)) {
							$studiengang = $werteSg['rel_id'];
							if (!isset($fakultaeten[$fb][$studiengang][$schwerpunkt][$semester_nr])) {
			  	  		$fakultaeten[$fb][$studiengang][$schwerpunkt][$semester_nr] = array();
							}
		    			if (!in_array($modul,$fakultaeten[$fb][$studiengang][$schwerpunkt][$semester_nr])) {
		  					array_push($fakultaeten[$fb][$studiengang][$schwerpunkt][$semester_nr],$modul);
		    			}
						}
					} else {
						$bedingungSg = 'SELECT rel_id  
												  FROM sixcms_article_article
													WHERE article_id=' . $modulId . '
													AND fieldname="rel_studiengaenge"
													';
						$abfrageSg = he_tools_db::six_sql_query($bedingungSg);
						while ($werteSg = he_tools_db::six_sql_fetch_assoc($abfrageSg)) {
							$studiengang = $werteSg['rel_id'];
							if (!isset($fakultaeten[$fb][$studiengang]['kein_schwerpunkt'][$semester_nr])) {
			  	  		$fakultaeten[$fb][$studiengang]['kein_schwerpunkt'][$semester_nr] = array();
							}
		    			if (!in_array($modul,$fakultaeten[$fb][$studiengang]['kein_schwerpunkt'][$semester_nr])) {
		  					array_push($fakultaeten[$fb][$studiengang]['kein_schwerpunkt'][$semester_nr],$modul);
		    			}
						}
//					}
				}
			}
		}
		$ergebnis = iconv("UTF-8", "ISO-8859-1", '"Fakultät";"Abschluß";"Studiengang";"Schwerpunkt";"Semester";"Modulbezeichung";"Modul-Code";"Modul-Pordnr";"Six-ID Modul";"Teilleistung";"Six-ID Teilleistung";"Pordnummer"' . "\n");
		$fakultaetenAusschluss = array('Graduate School' , 'Soziale Arbeit, Gesundheit und Pflege');
		foreach ($fakultaeten as $fb=>$studiengangListe) {
			if (!in_array($fbs[$fb],$fakultaetenAusschluss)) {
				foreach ($studiengangListe as $stdg=>$schwerpunktListe) {
				  if ($studiengaenge[$stdg]['master']) {
		        $abschluss = 'Master';
		      } else {
		        $abschluss = 'Bachelor';
		      }
		  
					foreach ($schwerpunktListe as $swp=>$semester) {
		  			foreach ($semester as $semester_nummer=>$module) {
		  				if ($swp=='kein_schwerpunkt') {
		  					$schwerpunkt = '';
		  				} else {
		  					$schwerpunkt = $schwerpunkte[$swp];
		  				}
		  				foreach ($module as $modul) {
								$bedingungTeilleistungen = 'SELECT sixcms_article.id as sixId,sixcms_article.title as titel2, sixcms_article_data.value as titel FROM sixcms_article
																INNER JOIN sixcms_article_article on sixcms_article.id =  sixcms_article_article.rel_id
																INNER JOIN sixcms_article_data on sixcms_article_data.article_id = sixcms_article.id
																WHERE 
																sixcms_article_article.article_id = ' . $modul . '
																AND  sixcms_article_article.fieldname = "rel_modulbeschreibungen_leistungsnachweis"
																AND sixcms_article_data.fieldname = "lv_titel"
																ORDER BY sixcms_article_article.rel_id
															';
								$abfrageTeilleistungen = he_tools_db::six_sql_query($bedingungTeilleistungen);
								$modulListe = array_keys($modulNamen);
								while ($werteTeilleistungen = he_tools_db::six_sql_fetch_assoc($abfrageTeilleistungen)) {
			  					if (!empty($werteTeilleistungen['titel'])) {
			  						$titel = strip_tags(iconv("UTF-8", "ISO-8859-1",$werteTeilleistungen['titel']));
			  					} else {
			  						$titel = strip_tags(iconv("UTF-8", "ISO-8859-1",$werteTeilleistungen['titel2']));
			  					}
			  					if (!empty($titel) 
			  							&& in_array($modul,$modulListe)) {
										$ergebnis .= '"' . $fbs[$fb] . '";"' .
				                         $abschluss . '";"' .
				                         $studiengaenge[$stdg]['name'] . '";"' .
				                         $schwerpunkt . '";"' .
				                         $semester_nummer  . '";"' .
				                         $modulNamen[$modul]['name'] . '";"' .
				                         $zugeordneteSixIds[$modul]['modulCode'] . '";"' .
				                         $zugeordneteSixIds[$modul]['pordNr'] . '";"' .
				                         $modul . '";"' .
				                         $titel . '";"' .
				                         $werteTeilleistungen['sixId'] . '"' . "\n";
									}
								}
							}
						}
					}
				}
				
			}
		}
		$jahr = date('Y');
		$monat = date('m');
		$tag = date('d');
		$dateiname = 'module_six' . '_' . $jahr. '_' . $monat. '_' . $tag . '.csv';
		header("Content-type: application/text");
		header('Expires: ' . gmdate('D, d M Y H:i:s') . ' GMT');
		header('Content-Disposition: attachment; filename="' . $dateiname . '"');
		header('Pragma: no-cache');
		print $ergebnis;
		exit();
	}

}
if (defined('TYPO3_MODE') && $TYPO3_CONF_VARS[TYPO3_MODE]['XCLASS']['ext/he_tools/mod1/class.he_backend_util.php'])	{
	include_once($TYPO3_CONF_VARS[TYPO3_MODE]['XCLASS']['ext/he_tools/mod1/class.he_backend_util.php']);
}
?>